apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.junit.platform.gradle.plugin'

dependencies {
    compile 'commons-io:commons-io:2.5'
    compile 'commons-lang:commons-lang:2.6'
    compile 'javax.validation:validation-api:2.0.0.Final'
    compile 'org.junit.jupiter:junit-jupiter-api:' + jUnitVersion
    runtime 'org.junit.jupiter:junit-jupiter-engine:' + jUnitVersion
    compile 'org.aspectj:aspectjtools:1.8.10'
    compile 'org.slf4j:slf4j-api:' + slf4Version

    compile 'io.cucumber:cucumber-core:' + cucumberVersion
    compile 'io.cucumber:cucumber-java:' + cucumberVersion
    compile 'io.cucumber:cucumber-junit:' + cucumberVersion
    compile 'io.cucumber:cucumber-spring:' + cucumberVersion
    compile 'junit:junit:4.12'

    compile 'org.seleniumhq.selenium:selenium-api:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-firefox-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-chrome-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-ie-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-remote-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-support:' + seleniumVersion

    compile 'org.springframework:spring-beans:' + springVersion
    compile 'org.springframework:spring-context:' + springVersion
    compile 'org.springframework:spring-test:' + springVersion
    compile 'org.springframework:spring-tx:' + springVersion

    compile 'org.springframework.boot:spring-boot:1.5.7.RELEASE'

    testCompile 'org.slf4j:slf4j-log4j12:' + slf4Version
    testCompile 'org.mockito:mockito-core:2.10.0'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        jgreenPublication(MavenPublication) {
            from components.java
            groupId 'cz.wicketstuff.jgreen'
            artifactId 'jgreen-core'
            version project.build_version

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().with {
                    appendNode('name', 'jGreen')
                    appendNode('description', 'Java Green - BDD style functional testing tool based on Selenium, Cucumber and Spring')
                    appendNode('url', 'http://jgreen.wicketstuff.cz/')
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'The Apache License, Version 2.0')
                            appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                        }
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('name', 'Martin Strejc')
                            appendNode('email', 'martin.strejc@diamon.cz')
                            appendNode('organization', 'Diamon')
                            appendNode('organizationUrl', 'http://jgreen.wicketstuff.cz/')
                        }
                    }
                    appendNode('scm').with {
                        appendNode('developerConnection', 'scm:git:git@github.com:martinstrejc/jgreen.git')
                        appendNode('connection', 'scm:git:https://github.com/martinstrejc/jgreen.git')
                        appendNode('url', 'https://github.com/martinstrejc/jgreen/')
                    }
                }
            }
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_API_KEY
    publications = ['jgreenPublication']
    publish = false
    override = false
    pkg {
        repo = 'jGreen'
        name = 'jGreen'
        userOrg = 'jgreen'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/martinstrejc/jgreen.git'
        version {
            name = project.build_version
            desc = 'Java Green - BDD style functional testing tool based on Selenium, Cucumber and Spring'
            released = new Date()
        }
    }
}
